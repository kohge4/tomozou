package datastore

import (
	"time"

	"github.com/jinzhu/gorm"
)

type SpotifyDBRepository struct {
	DB *gorm.DB
}

// 以下の モデル　を 本来は interface  に描きたい
type UserArtistTag struct {
	ID int `gorm:"column:id;not null;AUTO_INCREMENT" json:"id"`

	UserID   int `gorm:"column:user_id;not null" json:"user_id"`
	ArtistID int `gorm:"column:artist_id;not null" json:"artist_id"`

	TagName string `gorm:"column:tag_name;not null" json:"tag_name"`
	// FavoriteShorterm とか
}

func NewUserArtistTag(userID int, artistID int, tagName string) UserArtistTag {
	return UserArtistTag{
		UserID:   userID,
		ArtistID: artistID,
		TagName:  tagName,
	}
}

type Track struct {
	ID int
}

type ArtistTrackTag struct {
	ID int

	ArtistID int
	TrackID  int

	TagName string
}

type UserTrackTag struct {
	ID int

	UserID  int
	TrackID int

	TagName string
}

type AutoGenerated []struct {
	Track struct {
		Artists []struct {
			Name         string `json:"name"`
			ID           string `json:"id"`
			URI          string `json:"uri"`
			Href         string `json:"href"`
			ExternalUrls struct {
				Spotify string `json:"spotify"`
			} `json:"external_urls"`
		} `json:"artists"`
		AvailableMarkets []string `json:"available_markets"`
		DiscNumber       int      `json:"disc_number"`
		DurationMs       int      `json:"duration_ms"`
		Explicit         bool     `json:"explicit"`
		ExternalUrls     struct {
			Spotify string `json:"spotify"`
		} `json:"external_urls"`
		Href        string `json:"href"`
		ID          string `json:"id"`
		Name        string `json:"name"`
		PreviewURL  string `json:"preview_url"`
		TrackNumber int    `json:"track_number"`
		URI         string `json:"uri"`
	} `json:"track"`
	PlayedAt time.Time `json:"played_at"`
	Context  struct {
		ExternalUrls struct {
			Spotify string `json:"spotify"`
		} `json:"external_urls"`
		Href string `json:"href"`
		Type string `json:"type"`
		URI  string `json:"uri"`
	} `json:"context"`
}
